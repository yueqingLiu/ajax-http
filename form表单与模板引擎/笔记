form表单的基本使用
  1.什么是表单
    表单在网页中主要负责数据采集功能。HTML中的<form>标签，就是用于采集用户输入的信息，并通过<form>标签的提交操作，把采集到的信息提交到服务器端进行处理。
  2.表单的组成部分
    表单由三部分组成：
    · 表单标签
    · 表单域(包含了文本框、密码框、隐藏域、多行文本框、复选框、单选框、下拉选择框和文件上传框等)
    · 表单按钮
  3.<form>标签的属性
    <form>标签用来采集信息，<form>标签的属性则是用来规定如何把采集到的数据发送到服务器
    action 属性值：URL地址 规定当表单提交时，向何处发送表单数据
    method 属性值：get或post 规定以何种方式把表单数据提交到action URL
    enctype 属性值：application/x-www-form-urlencoded multipart/form-data text/plain 规定在发送表单之前如何对其进行编码
    target 属性值：_blank _self _parent _top framename 规定在何处打开action URL 
  4.表单的同步提交及缺点
    通过点击submit按钮，触发表单提交的操作，从而使页面跳转到action URL的行为，叫做表单的同步提交
    缺点：
      1.同步提交后，整个页面或发生跳转，跳转到action URL所指向的地址，用户体验很差
      2.同步提交后，页面之前的状态和数据会丢失
    解决方案：
      表单只负责采集数据，ajax负责将数据提交到服务器
通过ajax提交表单数据
  1.监听表单提交事件
    在jQuery中，可以使用如下两种方式，监听到表单的提交事件：
      $('#form1').submit(function(e) {
        alert('监听到了表单的提交事件')
      })
      $('#form1').on('submit', function(e) {
        alert('监听到了表单的提交事件')
      })
  2.阻止表单的默认提交行为
    当监听到表单的提交事件以后，可以调用事件对象的 event.preventDefault() 函数，来阻止表单的提交和页面的跳转
    $("#form1").submit(function (e) {
      // 阻止表单的提交和页面的跳转
      e.preventDefault()
    })
    $("#form1").on('submit', function (e) {
      // 阻止表单的提交和页面的跳转
      e.preventDefault()
    })
  3.快速获取表单中的数据: serialize()函数
      语法: $(selector).serialize()
      好处: 可以一次性获取到表单中的所有的数据
      注意: 在使用serialize函数快速获取表单数据时,必须为每个表单元素添加name属性

模板引擎
  概念：模板引擎，顾名思义，它可以根据程序员指定的模板结构和数据，自动生成一个完整的HTML页面
  好处：
    1.减少了字符串的拼接操作
    2.使代码结构更清晰
    3.使代码更易于阅读与维护
  art-template模板引擎：
    http://aui.github.io/art-template/zh-cn/index.html
    基本使用：
      1.导入art-template 
      2.定义数据
      3.定义模板
      4.调用template函数
      5.渲染HTML结构